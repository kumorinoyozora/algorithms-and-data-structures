Простые деревья


Написать программу для работы  по запросам оператора с  упорядоченной  таблицей, реализованной в виде двоичного дерева поиска.
Типы ключевых пространств и информации

Ключ - "an unsigned integer".
Информация - "a string with variable length (null-terminated)".

Узел дерева содержит ключ, указатели на правое и левое поддеревья, указатель на следующий и/или предыдущий узлы (для оптимизации выполнения требуемых операций обхода), указатель на родительский узел и указатель на информационное поле (т.е. реализовать дерево поиска с прошивкой).
В таблице могут храниться записи с одинаковыми ключами; элементы с дублирующимися ключами  хранятся непосредственно в дереве. Новые элементы с существующими ключами добавляются за счет удлинения ветвей дерева.
Предусмотреть следующие операции:
Включение нового элемента в таблицу без нарушения свойств упорядоченности; если информация с заданным ключом уже есть, но дублирование ключей не допускается, то выводится сообщение об ошибке.
Удаление  из  таблицы  элемента, заданного своим ключом, без нарушения свойств упорядоченности таблицы (если элементов несколько, то удаляется наиболее старый элемента).
Поиск информации по заданному ключу; если элементов с одинаковым ключем может быть несколько, в качестве результата возвращаются все элементы с заданным ключем или вектор их адресов; возврат копий элементов не допускается.
Вывод всего содержимого таблицы в прямом порядке следования ключей в заданном диапазоне.
Поиск элемента, соответствующего значению наименьшего ключа (если таких элементов несколько – действовать по аналогии с операцией поиска по ключу).
Примечания:
1. Программа  должна  содержать несколько функций;  функция main() должна выполнять: вывод меню, ввод и анализ  ответа,  вызов  на исполнение требуемой функции.
2. В программе нужно предусмотреть проверку правильности ввода данных.
3. Оценить сложность реализованных алгоритмов.
4. Для целей отладки реализовать форматированный вывод таблицы в виде дерева.
5. Для целей отладки реализовать загрузку таблицы из файла в формате
   • Ключ1
   • Инофрмация1
   • Ключ2
   • …
6. Провести таймирование (или профилирование) программы.
7. *(Дополнительно) Реализовать графический вывод таблицы (дерева) при помощи внешней библиотеки или внешнего инструмента (например, graphviz).
8. **(Дополнительно) При помощи реализованной таблицы (дерева) написать программу для подсчета частоты встречаемости каждого слова в текстовом файле (если ключ - строка) или каждого числа типа (unsigned) integer в бинарном файле (если ключ - число). Результат подсчета вывести в текстовый файл в формате "слово количество". Результат не должен зависеть от верхнего/нижнего регистра в словах и от пунктуационных знаков.
Например, для следующего текстового файла:
Мама мыла раму, мама
Результатом должен быть файл:
мама 2
мыла 1
раму 1
Для выполнения данного пункта задания разрешается изменить тип хранимых в таблице данных (Info).